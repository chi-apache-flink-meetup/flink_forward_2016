{"paragraphs":[{"title":"Sharing Data Between Interpreters","text":"%md \n# Apache Zeppelin `ResourcePool`s \n\n### `ResourcePool`s exist in Zeppelin its self.  Interpreters are able to send serializable objects to the resource pool, which can be then fished out by other interpreters. \n\n### This is most useful for visualization (was originally developed to power angular visualizaiton)\n\n### Other possibilities exist too however.\n","dateUpdated":"2016-09-12T12:18:52+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorHide":true,"editorMode":"ace/mode/markdown","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473191252640_-1892625141","id":"20160906-194732_24106776","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Apache Zeppelin <code>ResourcePool</code>s</h1>\n<h3><code>ResourcePool</code>s exist in Zeppelin its self.  Interpreters are able to send serializable objects to the resource pool, which can be then fished out by other interpreters.</h3>\n<h3>This is most useful for visualization (was originally developed to power angular visualizaiton)</h3>\n<h3>Other possibilities exist too however.</h3>\n"},"dateCreated":"2016-09-06T07:47:32+0000","dateStarted":"2016-09-12T00:19:24+0000","dateFinished":"2016-09-12T00:19:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3804"},{"title":"Create a Resource Pool","text":"%flink\n// for flink we have to declare declare the resource pool\nimport org.apache.zeppelin.interpreter.InterpreterContext\n\nval resourcePool = InterpreterContext.get().getResourcePool()","dateUpdated":"2016-09-12T00:20:51+0000","config":{"colWidth":4,"graph":{"mode":"table","height":85.625,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473191256353_-2079597782","id":"20160906-194736_-118820676","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.zeppelin.interpreter.InterpreterContext\nresourcePool: org.apache.zeppelin.resource.ResourcePool = org.apache.zeppelin.resource.DistributedResourcePool@3e00a1be\n"},"dateCreated":"2016-09-06T07:47:36+0000","dateStarted":"2016-09-06T07:47:52+0000","dateFinished":"2016-09-06T07:47:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3805"},{"title":"Put a variable in the Resource Pool","text":"%flink\n// Put a variable in the resource pool\nval foo = \"bar\"\nresourcePool.put(\"foo\", foo)\n","dateUpdated":"2016-09-12T00:20:02+0000","config":{"colWidth":4,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"title":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473191272417_861053386","id":"20160906-194752_-631597377","result":{"code":"SUCCESS","type":"TEXT","msg":"foo: String = bar\n"},"dateCreated":"2016-09-06T07:47:52+0000","dateStarted":"2016-09-06T07:48:08+0000","dateFinished":"2016-09-06T07:48:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3806"},{"title":"Get the variable from another interpreter (Spark)","text":"%spark\n\n// Spark has some built in wrapper. Let's get \"foo\" from the resource pool \nprintln(\"foo is: \"+ z.get(\"foo\"))","dateUpdated":"2016-09-06T07:59:03+0000","config":{"colWidth":4,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473191288094_-2070132301","id":"20160906-194808_531811936","result":{"code":"SUCCESS","type":"TEXT","msg":"foo is: bar\n"},"dateCreated":"2016-09-06T07:48:08+0000","dateStarted":"2016-09-06T07:48:23+0000","dateFinished":"2016-09-06T07:49:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3807"},{"title":"Spark Puts a List in the Pool","text":"%spark\n\nz.put(\"foo2\", List(1,2,3))","dateUpdated":"2016-09-12T00:21:07+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473191302828_-837366177","id":"20160906-194822_1711534027","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2016-09-06T07:48:22+0000","dateStarted":"2016-09-06T07:50:07+0000","dateFinished":"2016-09-06T07:50:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3808"},{"title":"Flink retrieves the list and does stuff","text":"%flink\n\nval foo2 = resourcePool.get(\"foo2\").get().asInstanceOf[List[Int]];\nprintln(\"foo2 is: \" + foo2)\nval foo3 = foo2.map(_ + 1)\nresourcePool.put(\"foo3\", foo3)\n","dateUpdated":"2016-09-12T00:21:28+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"title":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473191367056_-535479497","id":"20160906-194927_1175324074","result":{"code":"SUCCESS","type":"TEXT","msg":"foo2: List[Int] = List(1, 2, 3)\nfoo2 is: List(1, 2, 3)\nfoo3: List[Int] = List(2, 3, 4)\n"},"dateCreated":"2016-09-06T07:49:27+0000","dateStarted":"2016-09-06T07:50:10+0000","dateFinished":"2016-09-06T07:50:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3809"},{"title":"pySpark can play too.","text":"%spark.pyspark\n\nprint \"foo: \", z.get(\"foo\"), \",foo2: \", z.get(\"foo2\"), \"foo3: \", z.get(\"foo3\")","dateUpdated":"2016-09-12T00:21:47+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473191438678_-809882084","id":"20160906-195038_1072322075","result":{"code":"SUCCESS","type":"TEXT","msg":"foo:  bar ,foo2:  List(1, 2, 3) foo3:  List(2, 3, 4)\n"},"dateCreated":"2016-09-06T07:50:38+0000","dateStarted":"2016-09-06T07:53:53+0000","dateFinished":"2016-09-06T07:53:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3810"},{"title":"Wrap Up","text":"%md\n\n# ResourcePools have several applications, but we are going to focus on how they drive visualizatoins\n","dateUpdated":"2016-09-12T00:22:43+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/markdown","title":true,"editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473192034899_-1736671020","id":"20160906-200034_379646205","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>ResourcePools have several applications, but we are going to focus on how they drive visualizatoins</h1>\n"},"dateCreated":"2016-09-06T08:00:34+0000","dateStarted":"2016-09-12T00:22:23+0000","dateFinished":"2016-09-12T00:22:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3811"},{"text":"%md ","dateUpdated":"2016-09-12T00:22:23+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473639743015_-876253559","id":"20160912-002223_-1199867572","dateCreated":"2016-09-12T00:22:23+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:3812"}],"name":"ff2016/Act 3/Scene 1- Resource Pools","id":"2BWTQYUDE","lastReplName":{"value":"md"},"angularObjects":{"2BWY9CUHN:shared_process":[],"2BVEM1GV9:shared_process":[],"2BUZ8MDZ6:shared_process":[],"2BUKW2KRV:shared_process":[],"mahoutFlink:shared_process":[],"2BY5R5REM:shared_process":[],"flinkML:shared_process":[],"flinkNoJars:shared_process":[],"2BUV7W98K:shared_process":[],"2BUQPREFW:shared_process":[],"2BW2XCGHG:shared_process":[],"2BVJRXCGT:shared_process":[],"2BVFA2FYA:shared_process":[],"2BXTBP82W:shared_process":[],"2BXNYEA66:shared_process":[],"2BX9CQ57T:shared_process":[],"2BY2KCXPQ:shared_process":[],"2BUG7RJA5:shared_process":[],"2BWK7ZR27:shared_process":[],"2BY77ZK1N:shared_process":[],"flinkStreamingDemo:shared_process":[],"flinkGelly:shared_process":[],"2BVY13VRU:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}