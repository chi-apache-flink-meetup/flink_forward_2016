{"paragraphs":[{"text":"%md \n\n# The \"Data Scientist\"\n\n### Flink as an engine offers some interesting and useful reasons to use it as a data science platform- both theoretically and practically. \n\n### Data Scientists want / demand\n- ### Interactive Shell\n- ### Easy access to plotting\n- ### Rich library of mathematical functionality\n \n### Let's do a simple example from [the docs](https://ci.apache.org/projects/flink/flink-docs-master/dev/libs/ml/index.html)\n\n\n```scala\n// LabeledVector is a feature vector with a label (class or real value)\nval trainingData: DataSet[LabeledVector] = ...\nval testingData: DataSet[Vector] = ...\n\n// Alternatively, a Splitter is used to break up a DataSet into training and testing data.\nval dataSet: DataSet[LabeledVector] = ...\nval trainTestData: DataSet[TrainTestDataSet] = Splitter.trainTestSplit(dataSet)\nval trainingData: DataSet[LabeledVector] = trainTestData.training\nval testingData: DataSet[Vector] = trainTestData.testing.map(lv => lv.vector)\n\nval mlr = MultipleLinearRegression()\n  .setStepsize(1.0)\n  .setIterations(100)\n  .setConvergenceThreshold(0.001)\n\nmlr.fit(trainingData)\n\n// The fitted model can now be used to make predictions\nval predictions: DataSet[LabeledVector] = mlr.predict(testingData)\n```\n\n","dateUpdated":"2016-09-12T08:50:13+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473481166531_1436867874","id":"20160910-041926_-1939089266","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>The &ldquo;Data Scientist&rdquo;</h1>\n<h3>Flink as an engine offers some interesting and useful reasons to use it as a data science platform- both theoretically and practically.</h3>\n<h3>Data Scientists want / demand</h3>\n<ul>\n<li><h3>Interactive Shell</h3>\n</li>\n<li><h3>Easy access to plotting</h3>\n</li>\n<li><h3>Rich library of mathematical functionality</h3>\n</li>\n</ul>\n<h3>Let's do a simple example from <a href=\"https://ci.apache.org/projects/flink/flink-docs-master/dev/libs/ml/index.html\">the docs</a></h3>\n<pre><code class=\"scala\">// LabeledVector is a feature vector with a label (class or real value)\nval trainingData: DataSet[LabeledVector] = ...\nval testingData: DataSet[Vector] = ...\n\n// Alternatively, a Splitter is used to break up a DataSet into training and testing data.\nval dataSet: DataSet[LabeledVector] = ...\nval trainTestData: DataSet[TrainTestDataSet] = Splitter.trainTestSplit(dataSet)\nval trainingData: DataSet[LabeledVector] = trainTestData.training\nval testingData: DataSet[Vector] = trainTestData.testing.map(lv =&gt; lv.vector)\n\nval mlr = MultipleLinearRegression()\n  .setStepsize(1.0)\n  .setIterations(100)\n  .setConvergenceThreshold(0.001)\n\nmlr.fit(trainingData)\n\n// The fitted model can now be used to make predictions\nval predictions: DataSet[LabeledVector] = mlr.predict(testingData)\n</code></pre>\n"},"dateCreated":"2016-09-10T04:19:26+0000","dateStarted":"2016-09-12T08:50:13+0000","dateFinished":"2016-09-12T08:50:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2274"},{"title":"Download Survival DataSet (bash)","text":"%sh\nmkdir /tmp/data\nwget http://archive.ics.uci.edu/ml/machine-learning-databases/haberman/haberman.data -O /tmp/data/haberman.csv","dateUpdated":"2016-09-11T05:06:29+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/sh","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473485401259_-77467168","id":"20160910-053001_1700171301","result":{"code":"SUCCESS","type":"TEXT","msg":"mkdir: cannot create directory `/tmp/data': File exists\n--2016-09-11 05:06:31--  http://archive.ics.uci.edu/ml/machine-learning-databases/haberman/haberman.data\nResolving archive.ics.uci.edu... 128.195.10.249\nConnecting to archive.ics.uci.edu|128.195.10.249|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 3103 (3.0K) [text/plain]\nSaving to: “/tmp/data/haberman.csv”\n\n     0K ...                                                   100%  330M=0s\n\n2016-09-11 05:06:32 (330 MB/s) - “/tmp/data/haberman.csv” saved [3103/3103]\n\n"},"dateCreated":"2016-09-10T05:30:01+0000","dateStarted":"2016-09-11T05:06:30+0000","dateFinished":"2016-09-11T05:06:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2275"},{"text":"%md\n\n## First we utilized the `%sh` (shell interpreter) to fetch our data.  The advantage of doing that **IN Zeppelin** is that it makes for good notes when we want to recreate our experience later, or share our work with others\n### How many times to do you wish you had written down the URL for where you pulled your example data set from?\n\n### As a side note, the `%md` Markdown interpreter, makes it easy for us to document and talk about the things we are doing. \n\n## Next we are going to copy and paste the code snippet from `quickstart.html`\n","dateUpdated":"2016-09-11T11:35:00+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473636590980_-30837034","id":"20160911-232950_-334788866","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>First we utilized the <code>%sh</code> (shell interpreter) to fetch our data.  The advantage of doing that <strong>IN Zeppelin</strong> is that it makes for good notes when we want to recreate our experience later, or share our work with others</h2>\n<h3>How many times to do you wish you had written down the URL for where you pulled your example data set from?</h3>\n<h3>As a side note, the <code>%md</code> Markdown interpreter, makes it easy for us to document and talk about the things we are doing.</h3>\n<h2>Next we are going to copy and paste the code snippet from <code>quickstart.html</code></h2>\n"},"dateCreated":"2016-09-11T11:29:50+0000","dateStarted":"2016-09-11T11:35:01+0000","dateFinished":"2016-09-11T11:35:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2276"},{"text":"%flinkML\n\nimport org.apache.flink.ml.common.LabeledVector\nimport org.apache.flink.ml.math.DenseVector\n\n// https://ci.apache.org/projects/flink/flink-docs-master/dev/libs/ml/quickstart.html\nval survival = benv.readCsvFile[(String, String, String, String)](\"/tmp/data/haberman.csv\")\n\nval survivalLV = survival\n  .map{tuple =>\n    val list = tuple.productIterator.toList\n    val numList = list.map(_.asInstanceOf[String].toDouble)\n    LabeledVector(numList(3), DenseVector(numList.take(3).toArray))\n  }","dateUpdated":"2016-09-12T08:56:17+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473485570338_-1073553067","id":"20160910-053250_1480544867","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.flink.ml.common.LabeledVector\nimport org.apache.flink.ml.math.DenseVector\nsurvival: org.apache.flink.api.scala.DataSet[(String, String, String, String)] = org.apache.flink.api.scala.DataSet@d2c5b36a\nsurvivalLV: org.apache.flink.api.scala.DataSet[org.apache.flink.ml.common.LabeledVector] = org.apache.flink.api.scala.DataSet@e37d9e6\n"},"dateCreated":"2016-09-10T05:32:50+0000","dateStarted":"2016-09-12T08:56:18+0000","dateFinished":"2016-09-12T08:56:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2277"},{"text":"%md \n## Next we will copy and paste another example to `trainTestSplit` (a common cross-validation practice in data science) our data set\n\n## Finally, we will use FlinkML to perform a linear regression, and consider the `.squaredResidualSum` (a metric of how well our model performed on the hold out data from the split)","dateUpdated":"2016-09-12T08:51:05+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473636805103_767423344","id":"20160911-233325_802042741","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Next we will copy and paste another example to <code>trainTestSplit</code> (a common cross-validation practice in data science) our data set</h2>\n<h2>Finally, we will use FlinkML to perform a linear regression, and consider the <code>.squaredResidualSum</code> (a metric of how well our model performed on the hold out data from the split)</h2>\n"},"dateCreated":"2016-09-11T11:33:25+0000","dateStarted":"2016-09-11T11:36:11+0000","dateFinished":"2016-09-11T11:36:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2278"},{"title":"Split Data, Fit Multiple Linear Regression on Training Data, Evaluate Performance on Testing Data","text":"%flinkML\n\nimport org.apache.flink.ml.preprocessing.Splitter\nimport org.apache.flink.ml.math.Vector\nimport org.apache.flink.ml.regression.MultipleLinearRegression\n\n// https://ci.apache.org/projects/flink/flink-docs-master/dev/libs/ml/index.html\n\nval dataSet: DataSet[LabeledVector] = survivalLV\nval trainTestData = Splitter.trainTestSplit(dataSet)\nval trainingData: DataSet[LabeledVector] = trainTestData.training\nval testingData: DataSet[LabeledVector] = trainTestData.testing\n\nval mlr = MultipleLinearRegression()\n  .setStepsize(0.1)\n  .setIterations(20)\n  .setConvergenceThreshold(0.001)\n\nmlr.fit(trainingData)\n\n// The fitted model can now be used to make predictions\nval predictions: DataSet[(Vector, Double)] = mlr.predict(testingData.map(lv => lv.vector))\n\nval ssr = mlr.squaredResidualSum(testingData).collect()\n\nprintln(\"-------------------------------------------------------------------------------------------------------------------------\\n\")\nprintln(ssr)","dateUpdated":"2016-09-12T08:56:32+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473481837942_-1154298309","id":"20160910-043037_1619601437","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.flink.ml.preprocessing.Splitter\nimport org.apache.flink.ml.math.Vector\nimport org.apache.flink.ml.regression.MultipleLinearRegression\ndataSet: org.apache.flink.api.scala.DataSet[org.apache.flink.ml.common.LabeledVector] = org.apache.flink.api.scala.DataSet@e37d9e6\ntrainTestData: org.apache.flink.ml.preprocessing.Splitter.TrainTestDataSet[org.apache.flink.ml.common.LabeledVector] = TrainTestDataSet(org.apache.flink.api.scala.DataSet@b0fa81b2,org.apache.flink.api.scala.DataSet@79f28121)\ntrainingData: org.apache.flink.api.scala.DataSet[org.apache.flink.ml.common.LabeledVector] = org.apache.flink.api.scala.DataSet@b0fa81b2\ntestingData: org.apache.flink.api.scala.DataSet[org.apache.flink.ml.common.LabeledVector] = org.apache.flink.api.scala.DataSet@79f28121\nmlr: org.apache.flink.ml.regression.MultipleLinearRegression = org.apache.flink.ml.regression.MultipleLinearRegression@54d4ab9e\npredictions: org.apache.flink.api.scala.DataSet[(org.apache.flink.ml.math.Vector, Double)] = org.apache.flink.api.scala.DataSet@460a43e\nssr: Seq[Double] = Buffer(5.870895533464726E96)\n-------------------------------------------------------------------------------------------------------------------------\n\nBuffer(5.870895533464726E96)\n"},"dateCreated":"2016-09-10T04:30:37+0000","dateStarted":"2016-09-12T08:56:32+0000","dateFinished":"2016-09-12T08:56:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2279"},{"title":"More Data Science","text":"%md\n\n# After getting the results, the user wants to tweak some of the parameters but leave a record of where she has been for other users.\n\n### She simply copy+paste the paragraph above, updating the step size, and compares results.\n","dateUpdated":"2016-09-12T08:54:32+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/markdown","title":true,"editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473482029060_-2060673128","id":"20160910-043349_1769641990","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>After getting the results, the user wants to tweak some of the parameters but leave a record of where she has been for other users.</h1>\n<h3>She simply copy+paste the paragraph above, updating the step size, and compares results.</h3>\n"},"dateCreated":"2016-09-10T04:33:49+0000","dateStarted":"2016-09-12T08:53:00+0000","dateFinished":"2016-09-12T08:53:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2280"},{"text":"%flinkML\n\n\nval mlr2 = MultipleLinearRegression()\n  .setStepsize(0.01)\n  .setIterations(20)\n  .setConvergenceThreshold(0.001)\n\nmlr2.fit(trainingData)\n\n// The fitted model can now be used to make predictions\nval predictions: DataSet[(Vector, Double)] = mlr.predict(testingData.map(lv => lv.vector))\n\nval ssr2 = mlr2.squaredResidualSum(testingData).collect()\n\nprintln(\"-------------------------------------------------------------------------------------------------------------------------\\n\")\nprintln(\"old ssr: \"+ ssr)\nprintln(\"new ssr: \" + ssr2)\n","dateUpdated":"2016-09-12T08:56:56+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473670379749_879295202","id":"20160912-085259_-1601884159","result":{"code":"SUCCESS","type":"TEXT","msg":"mlr2: org.apache.flink.ml.regression.MultipleLinearRegression = org.apache.flink.ml.regression.MultipleLinearRegression@a7fef275\npredictions: org.apache.flink.api.scala.DataSet[(org.apache.flink.ml.math.Vector, Double)] = org.apache.flink.api.scala.DataSet@d4806a12\nssr2: Seq[Double] = Buffer(1.0968006862519498E56)\n-------------------------------------------------------------------------------------------------------------------------\n\nold ssr: Buffer(5.870895533464726E96)\nnew ssr: Buffer(1.0968006862519498E56)\n"},"dateCreated":"2016-09-12T08:52:59+0000","dateStarted":"2016-09-12T08:56:57+0000","dateFinished":"2016-09-12T08:57:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2281"},{"text":"%","dateUpdated":"2016-09-12T08:57:17+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1473670616738_-1682041167","id":"20160912-085656_-2086437025","dateCreated":"2016-09-12T08:56:56+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:2282"}],"name":"ff2016/Act 2/Scene 1- The \"Data Scientist\"","id":"2BUG2S2G3","lastReplName":{"value":"flinkML"},"angularObjects":{"2BWY9CUHN:shared_process":[],"2BVEM1GV9:shared_process":[],"2BUZ8MDZ6:shared_process":[],"2BUKW2KRV:shared_process":[],"mahoutFlink:shared_process":[],"2BY5R5REM:shared_process":[],"flinkML:shared_process":[],"flinkNoJars:shared_process":[],"2BUV7W98K:shared_process":[],"2BUQPREFW:shared_process":[],"2BW2XCGHG:shared_process":[],"2BVJRXCGT:shared_process":[],"2BVFA2FYA:shared_process":[],"2BXTBP82W:shared_process":[],"2BXNYEA66:shared_process":[],"2BX9CQ57T:shared_process":[],"2BY2KCXPQ:shared_process":[],"2BUG7RJA5:shared_process":[],"2BWK7ZR27:shared_process":[],"2BY77ZK1N:shared_process":[],"flinkStreamingDemo:shared_process":[],"flinkGelly:shared_process":[],"2BVY13VRU:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}